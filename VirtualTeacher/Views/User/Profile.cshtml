@model VirtualTeacher.Models.ViewModel.UserViewModel.EditProfileViewModel
<style scoped>
    .star {
        position: absolute;
        width: 2px;
        height: 2px;
        background-color: yellow;
        border-radius: 50%;
    }

    .bradcam_area.breadcam_bg.overlay2 {
        position: relative;
        overflow: hidden; /* Keeps stars within the div */
    }
</style>
<div class="bradcam_area breadcam_bg overlay2" style="padding: 80px">
    <img src="/img/astronaut-flying-with-pencil-rocket-.webp" alt="Astronaut reading a book" class="img-fluid" style="width: 300px">
    <h3> Edit Profile</h3>
</div>
<div style="height: 80vh; background-size: cover; display: flex; align-items: center; justify-content: center;"class="container-fluid">
    <div class="row justify-content-center" style="width: 1100px">
        <div class="col-md-10 col-lg-12">
            <div class="card shadow-lg">
               @*  <div class="card-header bg-primary text-white text-center">
                   
                </div> *@
                <div class="card-body d-flex justify-content-start">
                    <div class="profile-section d-flex flex-column align-items-center border-right pr-4" style="flex: 1;min-width: 66vh;padding: 5vh; padding-right: 5vh!important;">
                        @if (!Model.HasProfileImage)
                        {
                            <img src="/img/default-pfp.png" class="rounded-circle mb-3" style="width: 200px; height: 200px;" alt="Default Profile Picture">
                        }
                        else
                        {
                            <img src="@Url.Action("ProfilePicture", "User", new { email = Model.Email })" class="rounded-circle mb-3" style="width: 200px; height: 200px; object-fit: cover;" alt="Profile Picture">
                        }
                        <p style="color: black; font-size:25px"><strong>@Model.Email</strong></p>
                        <p style="color: black; font-size:20px">@Model.Role</p>
                        <form method="post" enctype="multipart/form-data" asp-controller="User" asp-action="ProfilePicture">
                            <div class="custom-file mb-3">
                                <input type="file" name="file" id="file" class="custom-file-input" required>
                                <label class="custom-file-label" for="file">Choose profile picture</label>
                            </div>
                            <button class="btn btn-outline-primary btn-block" type="submit">Upload</button>
                        </form>
                        @if (Model.Role == UserRole.Teacher)
                        {
                            <a href="@Url.Action("Create", "Courses")" class="btn btn-outline-success btn-block" style="width: 36vh; margin:10px; margin-top: 20px">Create Course</a>
                            <a href="@Url.Action("CreateLecture", "Lectures")" class="btn btn-outline-success btn-block" style="width: 36vh">Add Lecture</a>
                        }
                    </div>
                    <div class="edit-form pl-4" style="flex: 2;">
                        <form action="/user/editprofile" method="post">
                            <!-- Profile Edit Section -->
                            <div class="form-group">
                                <label for="firstName">First Name</label>
                                <input asp-for="FirstName" type="text" id="firstName" class="form-control" value="@Model.FirstName">
                                <span asp-validation-for="FirstName" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="lastName">Last Name</label>
                                <input asp-for="LastName" type="text" id="lastName" class="form-control" value="@Model.LastName">
                                <span asp-validation-for="LastName" class="text-danger"></span>
                            </div>
                            <button class="btn btn-primary" type="submit">Save Changes</button>
                        </form>
                        <form method="post" enctype="multipart/form-data" asp-controller="User" asp-action="ChangePassword" class="mt-4">
                            <!-- Password Change Section -->
                            <div class="form-group">
                                <label for="currentPassword">Current Password</label>
                                <input asp-for="CurrentPassword" type="password" id="currentPassword" class="form-control">
                                <span asp-validation-for="CurrentPassword" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="newPassword">New Password</label>
                                <input asp-for="NewPassword" type="password" id="newPassword" class="form-control">
                                <span asp-validation-for="NewPassword" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="confirmPassword">Confirm New Password</label>
                                <input asp-for="ConfirmNewPassword" type="password" id="confirmPassword" class="form-control">
                                <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
                            </div>
                            <button class="btn btn-warning" type="submit">Change Password</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Select the specific div with all three classes
        var bradcamArea = document.querySelector(".bradcam_area.breadcam_bg.overlay2");
        setInterval(createStar, 100);

        function createStar() {
            var right = Math.random() * bradcamArea.offsetWidth;
            var top = Math.random() * bradcamArea.offsetHeight;
            var star = document.createElement("div");
            star.classList.add("star");
            bradcamArea.appendChild(star); // Append the star to the targeted div
            star.style.top = top + "px";
            star.style.left = Math.random() * bradcamArea.offsetWidth + "px"; // Adjust to use left for horizontal positioning

            // Adjust or remove the function below based on your animation needs
            setTimeout(function () { star.remove(); }, 3000); // Remove the star after 3 seconds
        }
    });

</script>